Un Monitor mostra una sequenza di messaggi, uno per riga, dal più recente al più vecchio. Ogni messaggio
è costituito da al più MAXLEN=10 caratteri. Il numero massimo di messaggi che un monitor può mostrare è
costante. Quando un Monitor ha raggiunto il numero massimo di messaggi, il prossimo messaggio va a
sovrascrivere il più vecchio. Implementare le seguenti operazioni che possono essere effettuate su un
Monitor.

--- Metodi invocati nella PRIMA PARTE di main.cpp: ---

 Monitor m(N);
Costruttore che inizializza un Monitor capace di visualizzare un numero massimo di messaggi pari a N
(capienza). Se N è minore o uguale a zero, viene creato un Monitor con capienza 3 messaggi.

 m.inserisci(msg);
Operazione che inserisce il messaggio msg nel Monitor m. Se necessario, il messaggio msg viene troncato
a MAXLEN caratteri. È possibile utilizzare la funzione strncpy(dest,src,len) della libreria
cstring, la quale copia al più len caratteri da src a dest.

 cout << m;
Operatore di uscita per il tipo Monitor. L’output è nel formato seguente:

[4]
rockerduck
nonnapaper
paperone
paperino

L’esempio mostra un Monitor con capienza quattro messaggi. La prima riga visualizza la capienza racchiusa
tra parentesi quadre. Le successive righe visualizzano i messaggi presenti nel Monitor, dal più recente
("rockerduck") al più vecchio ("paperino").

--- Metodi invocati nella SECONDA PARTE di main.cpp: ---

 Monitor m1(m);
Costruttore di copia, che crea un Monitor m1 uguale a m.

 m3 = m1 + m2;
Operatore di somma che produce un Monitor la cui capienza è la somma delle capienze degli operandi, e i
cui messaggi sono i messaggi del primo operando più quelli del secondo. I messaggi del secondo operando
devono apparire come quelli più recenti nel Monitor risultato.

 ~Monitor();
Distruttore.